# Integraci칩n de Python en la Ense침anza de Matem치ticas

<center>
<img src="../../images/professor.png" width="400">
</center>

Este taller est치 dise침ado para profesores de matem치ticas de ense침anza media que buscan integrar la programaci칩n en Python en su curr칤culo. A trav칠s de ejemplos pr치cticos y ejercicios, los profesores aprender치n c칩mo pueden utilizar Python para hacer que las matem치ticas sean m치s interactivas y atractivas para los estudiantes.

## 游꿢 Objetivos del Taller

- Explorar c칩mo Python puede mejorar la ense침anza de las matem치ticas.
- Desarrollar ejercicios de programaci칩n que refuercen conceptos matem치ticos.
- Proveer herramientas para resolver problemas matem치ticos con Python.

## Contexto y Justificaci칩n

Integrar la programaci칩n en Python en la ense침anza de matem치ticas ofrece una oportunidad 칰nica para explorar conceptos matem치ticos de manera din치mica. Python, con su sintaxis clara y su amplia gama de bibliotecas, es una herramienta excelente para demostrar temas que van desde la aritm칠tica b치sica hasta conceptos m치s avanzados como el c치lculo y la estad칤stica. La facilidad de Python para generar simulaciones, realizar c치lculos simb칩licos y construir visualizaciones lo convierte en una plataforma ideal para los educadores que buscan enriquecer la comprensi칩n matem치tica de los estudiantes.

### Importancia de Integrar Python en la Educaci칩n Media

La inclusi칩n de Python en el curr칤culo de la ense침anza media es crucial no solo para fomentar el inter칠s y la competencia en ciencias de la computaci칩n, sino tambi칠n para integrar habilidades computacionales en el aprendizaje de las matem치ticas. Esta integraci칩n tiene varios beneficios clave:

1. **Preparaci칩n para los desaf칤os futuros**: Los estudiantes desarrollan competencias pr치cticas que les preparan para un mundo cada vez m치s tecnol칩gico y orientado a los datos.
2. **Aplicaci칩n de matem치ticas en situaciones reales**: Python permite que los estudiantes apliquen conceptos matem치ticos abstractos en problemas del mundo real, haciendo que el aprendizaje sea m치s tangible.
3. **Desarrollo del pensamiento cr칤tico y la resoluci칩n de problemas**: Utilizar Python fomenta el desarrollo de habilidades de razonamiento l칩gico, permitiendo a los estudiantes abordar problemas matem치ticos desde diferentes perspectivas y encontrar soluciones m치s eficientes.

<center>
<img src="../../images/n01.png" width="700">
</center>

### Impacto en la Educaci칩n

La adopci칩n de la programaci칩n en la educaci칩n ha mostrado un crecimiento constante en los 칰ltimos a침os, reflejando su creciente relevancia en el aprendizaje moderno. 

1. **Adopci칩n de la Programaci칩n en la Educaci칩n**: Se estima que m치s del 40% de las escuelas en pa칤ses desarrollados han incorporado alg칰n tipo de ense침anza de programaci칩n en sus curr칤culos, tanto en niveles primarios como secundarios. Este enfoque no solo prepara a los estudiantes para futuros desaf칤os tecnol칩gicos, sino que tambi칠n facilita el desarrollo de habilidades fundamentales como el pensamiento l칩gico y la resoluci칩n de problemas desde una edad temprana.

2. **Matem치ticas en la Educaci칩n STEM**: Las matem치ticas siguen siendo una piedra angular dentro de las disciplinas STEM (ciencia, tecnolog칤a, ingenier칤a y matem치ticas). Seg칰n un informe de la UNESCO, el 25% de las inscripciones universitarias a nivel global est치n vinculadas a carreras relacionadas con STEM, lo que subraya la importancia de las matem치ticas como base para el desarrollo de competencias en 치reas cient칤ficas y tecnol칩gicas. Esta intersecci칩n entre matem치ticas y programaci칩n ofrece un enfoque integrado que maximiza el potencial de los estudiantes en ambos campos.


<center>
<img src="../../images/n02.png" width="700">
</center>

### Demanda en el Mercado Laboral

Las habilidades en programaci칩n y matem치ticas son cruciales no solo en la educaci칩n, sino tambi칠n en el mercado laboral. Existen varias tendencias importantes:

1. **Crecimiento en el desarrollo de software**: El U.S. Bureau of Labor Statistics proyecta que la demanda de desarrolladores de software crecer치 un 22% entre 2020 y 2030, muy por encima del promedio de otras ocupaciones.
2. **Demanda de habilidades matem치ticas**: Un estudio de LinkedIn revela que las posiciones que requieren habilidades matem치ticas, como ciencia de datos y an치lisis financiero, est치n creciendo a una tasa del 33% anual.
3. **Salarios competitivos**: Los profesionales en estos campos tienden a tener salarios elevados. Los programadores ganan un salario promedio de $110,000 al a침o en EE. UU., mientras que los matem치ticos y analistas cuantitativos ganan en promedio $100,000.

<center>
<img src="../../images/n03.png" width="500">
</center>


### Perspectiva de G칠nero

Uno de los desaf칤os m치s persistentes en el 치mbito de la programaci칩n y las matem치ticas es la disparidad de g칠nero. Los datos actuales muestran lo siguiente:

1. **Programaci칩n**: Solo el 21% de los puestos en inform치tica y programaci칩n son ocupados por mujeres. Sin embargo, las iniciativas para reducir esta brecha est치n creciendo, con programas que promueven la inclusi칩n de m치s mujeres en ciencias de la computaci칩n.
2. **Matem치ticas**: En ciencias matem치ticas, aunque el 47% de los estudiantes de pregrado son mujeres, solo el 29% de los puestos acad칠micos permanentes son ocupados por ellas. Esto indica que a칰n hay un largo camino por recorrer en cuanto a la equidad de g칠nero en estos campos.
<center>
<img src="../../images/n04.png" width="300">
</center>

### Python y las Matem치ticas Aplicadas

Python se ha posicionado como una herramienta esencial en las matem치ticas aplicadas y la ciencia de datos. Existen varias razones para su popularidad:

1. **Flexibilidad y adaptabilidad**: Con bibliotecas como NumPy, Pandas, Matplotlib y SymPy, Python permite realizar c치lculos complejos y visualizaciones de manera eficiente.
2. **Relevancia en el machine learning**: Seg칰n un estudio de Kaggle, el 85% de los cient칤ficos de datos considera que un fuerte entendimiento de matem치ticas es esencial para desarrollar algoritmos de machine learning, y Python se ha convertido en el lenguaje preferido en este campo.
3. **Versatilidad en visualizaci칩n de datos**: Python permite a los estudiantes y profesionales gestionar grandes vol칰menes de datos y crear visualizaciones interactivas que facilitan el an치lisis y la toma de decisiones informadas.

<center>
<img src="../../images/n05.png" width="300">
</center>


## Ejercicios y Ejemplos Pr치cticos

### 游댝 Aritm칠tica y Python

Estos ejercicios est치n dise침ados para ayudar a los estudiantes a practicar conceptos aritm칠ticos b치sicos utilizando Python.

#### 1. Sumar y Restar Fracciones

```{pyodide-python}
from fractions import Fraction

def operaciones_fracciones(f1, f2):
    suma = f1 + f2
    resta = f1 - f2
    return suma, resta

# Ejemplo de uso
fraccion1 = Fraction(3, 4)
fraccion2 = Fraction(2, 5)
suma, resta = operaciones_fracciones(fraccion1, fraccion2)
print(f"La suma de las fracciones es {suma}, y la resta es {resta}")
```

#### 2. Calcular el Promedio de una Lista de N칰meros

```{pyodide-python}
def promedio(numeros):
    return sum(numeros) / len(numeros)

# Ejemplo de uso
numeros = [4, 8, 15, 16, 23, 42]
print(f"El promedio es {promedio(numeros):.2f}")
```

#### 3. M칤nimo Com칰n M칰ltiplo (MCM)

```{pyodide-python}
import math

def mcm(a, b):
    return abs(a * b) // math.gcd(a, b)

# Ejemplo de uso
num1, num2 = 12, 15
print(f"El MCM de {num1} y {num2} es {mcm(num1, num2)}")
```

#### 4. Convertir de Decimal a Binario

```{pyodide-python}
def decimal_a_binario(num):
    return bin(num)[2:]

# Ejemplo de uso
numero = 29
print(f"El n칰mero {numero} en binario es {decimal_a_binario(numero)}")
```

#### 5. Calcular el Factorial de un N칰mero

```{pyodide-python}
import math

def factorial(n):
    return math.factorial(n)

# Ejemplo de uso
numero = 5
print(f"El factorial de {numero} es {factorial(numero)}")
```

---

### 游늻 Geometr칤a y Python

Estos ejercicios permiten a los estudiantes interactuar con conceptos geom칠tricos mediante Python.

#### 1. Calcular el 츼rea y Per칤metro de un Rect치ngulo

```{pyodide-python}
def area_perimetro_rectangulo(largo, ancho):
    area = largo * ancho
    perimetro = 2 * (largo + ancho)
    return area, perimetro

# Ejemplo de uso
largo = 10
ancho = 5
area, perimetro = area_perimetro_rectangulo(largo, ancho)
print(f"El 치rea del rect치ngulo es {area} y el per칤metro es {perimetro}")
```

#### 2. Calcular el Volumen de un Cilindro

```{pyodide-python}
import math

def volumen_cilindro(radio, altura):
    return math.pi * radio ** 2 * altura

# Ejemplo de uso
radio = 3
altura = 7
print(f"El volumen del cilindro es {volumen_cilindro(radio, altura):.2f}")
```

#### 3. Calcular el 츼rea de un Tri치ngulo

```{pyodide-python}
def area_triangulo(base, altura):
    return (base * altura) / 2

# Ejemplo de uso
base = 6
altura = 9
print(f"El 치rea del tri치ngulo es {area_triangulo(base, altura):.2f}")
```

#### 4. Calcular la Distancia entre dos Puntos

```{pyodide-python}
import math

def distancia_puntos(x1, y1, x2, y2):
    return math.sqrt((x2 - x1)**2 + (y2 - y1)**2)

# Ejemplo de uso
x1, y1 = 2, 3
x2, y2 = 8, 7
print(f"La distancia entre los puntos es {distancia_puntos(x1, y1, x2, y2):.2f}")
```

#### 5. Calcular el 츼rea de un C칤rculo

```{pyodide-python}
import math

def area_circulo(radio):
    return math.pi * radio ** 2

# Ejemplo de uso
radio = 5
print(f"El 치rea de un c칤rculo con radio {radio} es {area_circulo(radio):.2f}")
```



## Implementaci칩n en el Aula con Inteligencia Artificial y ChatGPT

La inteligencia artificial, a trav칠s de herramientas como ChatGPT, puede transformar la manera en que los profesores ense침an matem치ticas y programaci칩n. Utilizar ChatGPT en combinaci칩n con plataformas interactivas como **Jupyter Notebooks** o **Google Colab** permite a los estudiantes acceder a explicaciones claras, ejemplos pr치cticos y soluciones en tiempo real. Los estudiantes pueden hacer preguntas directamente a la IA para obtener ayuda adicional, reforzando su aprendizaje y mejorando su comprensi칩n de conceptos matem치ticos y de programaci칩n.


::: {.callout-tip collapse="false" title="Desaf칤o para Profesores:"}
El desaf칤o para los profesores es seguir aprendiendo programaci칩n en Python y explorar nuevas formas de integrar estas herramientas en la ense침anza de matem치ticas. A la vez, deben motivar a los estudiantes a profundizar en programaci칩n, demostrando c칩mo puede resolver problemas complejos de manera eficiente. ChatGPT facilita este proceso, proporcionando un recurso interactivo para resolver dudas y reforzar el aprendizaje.

Crear ejercicios que combinen Python con matem치ticas y animar a los estudiantes a interactuar con la IA impulsa una mayor participaci칩n, adem치s de introducirlos a tecnolog칤as emergentes como la inteligencia artificial.
:::

