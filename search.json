[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "üî¢ DMAT",
    "section": "",
    "text": "üè† Home\nEste espacio ha sido creado para motivar a los estudiantes a aprender tanto Python como conceptos matem√°ticos fundamentales. En este repositorio, encontrar√°s ejemplos pr√°cticos y autocontenidos que te permitir√°n entender y practicar los principios b√°sicos de programaci√≥n en Python, as√≠ como explorar aplicaciones matem√°ticas de manera sencilla y efectiva.\nEsta iniciativa forma parte del apoyo a las Olimpiadas de Matem√°tica Federico Santa Mar√≠a 2024, una competencia y actividad de divulgaci√≥n matem√°tica dirigida a todos los estudiantes de Tercero y Cuarto A√±o de Ense√±anza Media de la regi√≥n de Valpara√≠so/RM.",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>üè† Home</span>"
    ]
  },
  {
    "objectID": "index.html#cronograma",
    "href": "index.html#cronograma",
    "title": "üî¢ DMAT",
    "section": "üìÖ Cronograma",
    "text": "üìÖ Cronograma\n\n\n\n\n\n\n\n\nPropuesta de cronograma - D√≠a 1\n\n\nActividades y horarios del 10 de octubre\n\n\nInicio\nT√©rmino\nActividad\n\n\n\n\n10:00\n10:45\nInscripci√≥n\n\n\n11:00\n12:00\nPrueba 1 (individual)\n\n\n12:00\n12:30\nRecorrido por instalaciones\n\n\n12:30\n14:00\nAlmuerzo\n\n\n14:15\n15:15\nBienvenida y Charla Magistral\n\n\n15:30\n16:30\nTalleres\n\n\n16:45\n17:40\nCoffee break\n\n\n17:30\n18:15\nCeremonia de cierre y premiaci√≥n\n\n\n\n\n\n\n        \n\n\n\n\n\n\n\n\n\n\nPropuesta de cronograma - D√≠a 2\n\n\nActividades y horarios del 11 de octubre\n\n\nInicio\nT√©rmino\nActividad\n\n\n\n\n11:00\n12:00\nPrueba 2 (Grupales)\n\n\n12:30\n14:00\nAlmuerzo\n\n\n14:15\n16:30\nExpoMate - charlas interactivas\n\n\n16:45\n17:30\nCoffee break\n\n\n17:30\n18:15\nCeremonia de cierre y premiaci√≥n\n\n\n\n\n\n\n        \n\n\n\nTaller Estudiantes: Matem√°ticas Divertidas con Python.\nTaller Profesores: Integraci√≥n de Python en la Ense√±anza de Matem√°ticas.",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>üè† Home</span>"
    ]
  },
  {
    "objectID": "material/talleres/intro.html",
    "href": "material/talleres/intro.html",
    "title": "Primeros Pasos",
    "section": "",
    "text": "Programaci√≥n\nPodr√≠amos definir la esencia de la programaci√≥n en una frase sencilla:\nLa programaci√≥n permite delegar actividades repetitivas y tediosas a las m√°quinas, liberando a los humanos para que se concentren en desaf√≠os m√°s estimulantes. Estos desaf√≠os suelen requerir creatividad, pensamiento cr√≠tico y un enfoque subjetivo.\nMediante la programaci√≥n, comunicamos a la computadora instrucciones detalladas de las operaciones que deseamos que realice. Si la computadora no act√∫a como esper√°bamos, usualmente significa que no hemos especificado nuestras instrucciones con la claridad necesaria.\nLa programaci√≥n es tanto un arte como una ciencia, una pr√°ctica mediante la cual traducimos ideas complejas en comandos que las m√°quinas puedan seguir eficientemente.",
    "crumbs": [
      "üöÄ Talleres",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Primeros Pasos</span>"
    ]
  },
  {
    "objectID": "material/talleres/intro.html#programaci√≥n",
    "href": "material/talleres/intro.html#programaci√≥n",
    "title": "Primeros Pasos",
    "section": "",
    "text": "‚ÄúAutomatizar tareas para que sean ejecutadas por la computadora.‚Äù\n\n\n\n‚ÄúSe dice que uno no comprende verdaderamente algo hasta que puede explic√°rselo a otro. En realidad, uno no lo entiende completamente hasta que puede explic√°rselo a una computadora.‚Äù ‚Äî Donald Knuth",
    "crumbs": [
      "üöÄ Talleres",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Primeros Pasos</span>"
    ]
  },
  {
    "objectID": "material/talleres/intro.html#python",
    "href": "material/talleres/intro.html#python",
    "title": "Primeros Pasos",
    "section": "Python",
    "text": "Python\nPython se ha consolidado como uno de los lenguajes de programaci√≥n m√°s populares del mundo, y su crecimiento puede atribuirse a tres factores clave:\n\nClaridad y simplicidad: Los programas escritos en Python suelen ser f√°ciles de leer y entender, ya que su sintaxis se asemeja mucho al ingl√©s. Esto hace que sea accesible tanto para principiantes como para expertos.\nRico ecosistema de librer√≠as: Python viene equipado con una extensa biblioteca est√°ndar que cubre una amplia variedad de necesidades, desde operaciones matem√°ticas hasta manejo del sistema operativo, pasando por funciones de tiempo y fecha, entre otras.\nExtensibilidad: Python permite a los usuarios ampliar sus capacidades integrando otros lenguajes de programaci√≥n. Esto es posible gracias a que se pueden escribir m√≥dulos en lenguajes como C o C++, los cuales pueden ser utilizados dentro de programas de Python, potenciando as√≠ su eficiencia y flexibilidad.\n\nEsta combinaci√≥n de facilidad de uso, riqueza funcional y adaptabilidad hace que Python sea una herramienta poderosa para una variedad de aplicaciones en ciencia de datos, desarrollo web, automatizaci√≥n, y m√°s.",
    "crumbs": [
      "üöÄ Talleres",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Primeros Pasos</span>"
    ]
  },
  {
    "objectID": "material/talleres/intro.html#ejecutando-c√≥digo-python",
    "href": "material/talleres/intro.html#ejecutando-c√≥digo-python",
    "title": "Primeros Pasos",
    "section": "Ejecutando c√≥digo Python",
    "text": "Ejecutando c√≥digo Python\nPara trabajar con Python en una computadora, debes seguir estos pasos:\n\nInstalaci√≥n de Python: Aseg√∫rate de que tu equipo tenga alguna versi√≥n de Python instalada.\nCreaci√≥n de un programa: Escribe tu c√≥digo en un archivo, como mi_programa.py.\nEjecuci√≥n del programa: Utiliza Python para ejecutar el archivo mediante el comando python mi_programa.py en la terminal.\n\nCon el aumento de la popularidad de Python, han surgido plataformas alternativas para su uso, como los notebooks (Jupyter Notebooks, Google Colab, entre otros), que ofrecen entornos interactivos y vers√°tiles.\nPara esta ocasi√≥n, optamos por una tecnolog√≠a innovadora que emula la ejecuci√≥n de Python directamente en una p√°gina web. Esta opci√≥n no requiere instalaciones y puede usarse desde cualquier dispositivo con conexi√≥n a internet, aunque es importante reconocer que sigue siendo un ambiente simulado.\nEl entorno incluye tres botones en la parte superior del contenedor de c√≥digo que permiten ejecutar el c√≥digo, reiniciar el c√≥digo a su estado inicial y copiar el c√≥digo al portapapeles. A continuaci√≥n, se muestra una imagen que ilustra estos botones:\n\n\n\nBotones de ejecutar, reiniciar y copiar en un entorno de c√≥digo Python.",
    "crumbs": [
      "üöÄ Talleres",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Primeros Pasos</span>"
    ]
  },
  {
    "objectID": "material/talleres/intro.html#ejemplo-hola-mundo",
    "href": "material/talleres/intro.html#ejemplo-hola-mundo",
    "title": "Primeros Pasos",
    "section": "Ejemplo: üëã Hola Mundo",
    "text": "Ejemplo: üëã Hola Mundo\nEn el mundo de la programaci√≥n, es tradicional comenzar aprendiendo a hacer que la computadora muestre el mensaje ‚ÄúHola, Mundo‚Äù (o ‚ÄúHello World‚Äù).\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nDesaf√≠o:\n\n\n\n\n\nIntenta modificar el c√≥digo anterior para que, en lugar de ‚ÄúHola, Mundo‚Äù, el mensaje incluya tu nombre. ¬øC√≥mo cambiar√≠as el saludo?",
    "crumbs": [
      "üöÄ Talleres",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Primeros Pasos</span>"
    ]
  },
  {
    "objectID": "material/talleres/taller_1.html",
    "href": "material/talleres/taller_1.html",
    "title": "Matem√°ticas Divertidas con Python",
    "section": "",
    "text": "üå°Ô∏è Conversi√≥n de Temperatura\nUn programa para convertir grados Celsius a Fahrenheit. Este ejercicio es ideal para practicar operaciones matem√°ticas b√°sicas y el uso de funciones en Python.",
    "crumbs": [
      "üöÄ Talleres",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Matem√°ticas Divertidas con Python</span>"
    ]
  },
  {
    "objectID": "material/talleres/taller_1.html#conversi√≥n-de-temperatura",
    "href": "material/talleres/taller_1.html#conversi√≥n-de-temperatura",
    "title": "Matem√°ticas Divertidas con Python",
    "section": "",
    "text": "Contexto\nLa conversi√≥n de temperatura es una operaci√≥n com√∫n en muchos campos cient√≠ficos, desde la meteorolog√≠a hasta la f√≠sica y la qu√≠mica. Conocer c√≥mo convertir entre diferentes unidades de temperatura es esencial en muchas aplicaciones. En este ejercicio, utilizaremos la f√≥rmula de conversi√≥n para transformar una temperatura dada en grados Celsius a su equivalente en grados Fahrenheit.\n\n\nF√≥rmula de Conversi√≥n\nLa f√≥rmula para convertir grados Celsius a Fahrenheit es:\n\\[ \\text{Fahrenheit} = \\left( \\text{Celsius} \\times \\frac{9}{5} \\right) + 32 \\]\n\n\nObjetivos del Ejercicio\n\n\n\n\n\n\nDesaf√≠o:\n\n\n\n\n\nEl objetivo de este ejercicio es escribir una funci√≥n en Python que convierta grados Celsius a Fahrenheit y pruebe la funci√≥n con un ejemplo.\n\n\n\n\nDefinir una funci√≥n: Crearemos una funci√≥n llamada celsius_a_fahrenheit que tome un par√°metro: la temperatura en grados Celsius (celsius).\nImplementar la conversi√≥n: Usaremos la f√≥rmula de conversi√≥n para calcular la temperatura en grados Fahrenheit.\nProbar la funci√≥n: Probaremos la funci√≥n con un valor de ejemplo y mostraremos el resultado.\n\n\n\nC√≥digo para Conversi√≥n de Temperatura\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nExplicaci√≥n del C√≥digo\n\nPar√°metro de Entrada:\n\ncelsius: Un n√∫mero que representa la temperatura en grados Celsius.\n\nF√≥rmula de Conversi√≥n:\n\nLa funci√≥n utiliza la f√≥rmula \\((celsius \\times \\frac{9}{5}) + 32\\) para convertir la temperatura a grados Fahrenheit y devuelve el resultado.\n\n\n\n\nEjemplo de Uso\nEl c√≥digo de ejemplo muestra c√≥mo usar la funci√≥n celsius_a_fahrenheit con un valor de temperatura de ejemplo (25 grados Celsius). Al ejecutar este ejemplo, se imprimir√° 25 grados Celsius son 77.0 grados Fahrenheit.\n\n\nPrueba y Modificaci√≥n\nLos estudiantes pueden modificar los valores de celsius para probar diferentes temperaturas y explorar c√≥mo funciona la funci√≥n. Por ejemplo:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nEstos ejemplos permiten a los estudiantes ver c√≥mo la funci√≥n convierte distintas temperaturas en grados Celsius a su equivalente en grados Fahrenheit, reforzando su comprensi√≥n de la conversi√≥n de unidades y el uso de funciones en Python.",
    "crumbs": [
      "üöÄ Talleres",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Matem√°ticas Divertidas con Python</span>"
    ]
  },
  {
    "objectID": "material/talleres/taller_1.html#c√°lculo-del-√≠ndice-de-masa-corporal-imc",
    "href": "material/talleres/taller_1.html#c√°lculo-del-√≠ndice-de-masa-corporal-imc",
    "title": "Matem√°ticas Divertidas con Python",
    "section": "üèãÔ∏è‚Äç‚ôÇÔ∏è C√°lculo del √çndice de Masa Corporal (IMC)",
    "text": "üèãÔ∏è‚Äç‚ôÇÔ∏è C√°lculo del √çndice de Masa Corporal (IMC)\nUn programa para calcular el IMC de una persona. Este ejercicio es √∫til para practicar operaciones matem√°ticas y el uso de funciones en Python.\n\nContexto\nEl √çndice de Masa Corporal (IMC) es una medida de la grasa corporal basada en la altura y el peso de una persona. La f√≥rmula para calcular el IMC es:\n\\[ \\text{IMC} = \\frac{\\text{peso}}{\\text{altura}^2} \\]\n\n\nObjetivos del Ejercicio\n\n\n\n\n\n\nDesaf√≠o:\n\n\n\n\n\nEl objetivo de este ejercicio es escribir una funci√≥n en Python que calcule el IMC de una persona y pruebe la funci√≥n con un ejemplo.\n\n\n\n\nDefinir una funci√≥n: Crearemos una funci√≥n llamada calcular_imc que tome dos par√°metros: el peso (peso) y la altura (altura).\nImplementar el c√°lculo: Usaremos la f√≥rmula del IMC para calcular el √≠ndice y devolver el resultado.\nProbar la funci√≥n: Probaremos la funci√≥n con valores de ejemplo y mostraremos el resultado.\n\n\n\nC√≥digo para el C√°lculo del IMC\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nExplicaci√≥n del C√≥digo\n\nPar√°metros de Entrada:\n\npeso: Un n√∫mero que representa el peso de la persona en kilogramos.\naltura: Un n√∫mero que representa la altura de la persona en metros.\n\nF√≥rmula del IMC:\n\nLa funci√≥n utiliza la f√≥rmula \\(\\frac{peso}{altura^2}\\) para calcular el IMC y devuelve el resultado.\n\n\n\n\nEjemplo de Uso\nEl c√≥digo de ejemplo muestra c√≥mo usar la funci√≥n calcular_imc con valores de ejemplo (70 kg de peso y 1.75 m de altura). Al ejecutar este ejemplo, se imprimir√° Para un peso de 70 kg y una altura de 1.75 m, el IMC es 22.86.\n\n\nPrueba y Modificaci√≥n\nLos estudiantes pueden modificar los valores de peso y altura para probar diferentes combinaciones y explorar c√≥mo funciona la funci√≥n. Por ejemplo:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nEstos ejemplos permiten a los estudiantes ver c√≥mo la funci√≥n calcula el IMC para diferentes pesos y alturas, reforzando su comprensi√≥n de las operaciones matem√°ticas y el uso de funciones en Python.",
    "crumbs": [
      "üöÄ Talleres",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Matem√°ticas Divertidas con Python</span>"
    ]
  },
  {
    "objectID": "material/talleres/taller_1.html#verificaci√≥n-de-a√±o-bisiesto",
    "href": "material/talleres/taller_1.html#verificaci√≥n-de-a√±o-bisiesto",
    "title": "Matem√°ticas Divertidas con Python",
    "section": "üìÖ Verificaci√≥n de A√±o Bisiesto",
    "text": "üìÖ Verificaci√≥n de A√±o Bisiesto\nEn este ejercicio, vamos a crear un programa que determine si un a√±o es bisiesto. Este ejercicio es excelente para practicar el uso de operadores l√≥gicos y condicionales en Python.\n\nContexto\nUn a√±o bisiesto es un a√±o que tiene 366 d√≠as en lugar de los 365 d√≠as habituales. Este d√≠a adicional se a√±ade en febrero, que tiene 29 d√≠as en lugar de 28. Las reglas para determinar si un a√±o es bisiesto son las siguientes:\n\nUn a√±o es bisiesto si es divisible por 4.\nSin embargo, si el a√±o es divisible por 100, no es un a√±o bisiesto a menos que tambi√©n sea divisible por 400.\n\n\n\nObjetivos del Ejercicio\n\n\n\n\n\n\nDesaf√≠o:\n\n\n\n\n\nEl objetivo de este ejercicio es escribir una funci√≥n en Python que determine si un a√±o es bisiesto o no, utilizando las reglas mencionadas anteriormente.\n\n\n\n\nDefinir una funci√≥n: Crearemos una funci√≥n llamada es_bisiesto que tome un par√°metro: el a√±o (anio) a verificar.\nImplementar la l√≥gica: Usaremos operadores l√≥gicos (and, or) y estructuras condicionales (if, else) para determinar si el a√±o es bisiesto.\nProbar la funci√≥n: Probaremos la funci√≥n con diferentes a√±os para asegurarnos de que funcione correctamente.\n\n\n\nC√≥digo para Verificaci√≥n de A√±o Bisiesto\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nExplicaci√≥n del C√≥digo\nEste c√≥digo define una funci√≥n llamada es_bisiesto que realiza lo siguiente:\n\nPar√°metro de Entrada:\n\nanio: Un entero que representa el a√±o a verificar.\n\nL√≥gica para Determinar A√±o Bisiesto:\n\nUtiliza operadores l√≥gicos y condicionales para verificar las reglas de un a√±o bisiesto.\nRegla 1: (anio % 4 == 0 and anio % 100 != 0) - Un a√±o es bisiesto si es divisible por 4 y no es divisible por 100.\nRegla 2: (anio % 400 == 0) - Un a√±o es bisiesto si es divisible por 400.\nSi alguna de las reglas es verdadera, la funci√≥n devuelve True, indicando que el a√±o es bisiesto. De lo contrario, devuelve False.\n\n\n\n\nEjemplo de Uso\nEl c√≥digo de ejemplo muestra c√≥mo usar la funci√≥n es_bisiesto para verificar si el a√±o 2024 es bisiesto. Al ejecutar este ejemplo, se imprimir√° 2024 es un a√±o bisiesto.\n\n\nPrueba y Modificaci√≥n\nLos estudiantes pueden modificar el valor de anio para probar diferentes a√±os y explorar c√≥mo funciona la funci√≥n. Por ejemplo:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nEstos ejemplos permiten a los estudiantes ver c√≥mo la funci√≥n verifica si diferentes a√±os son bisiestos, reforzando su comprensi√≥n del uso de operadores l√≥gicos y estructuras condicionales en Python. Este ejercicio proporciona una excelente oportunidad para practicar la implementaci√≥n de reglas l√≥gicas y condicionales en Python, y es una forma efectiva de entender c√≥mo aplicar reglas matem√°ticas para resolver problemas del mundo real.",
    "crumbs": [
      "üöÄ Talleres",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Matem√°ticas Divertidas con Python</span>"
    ]
  },
  {
    "objectID": "material/talleres/taller_1.html#calculadora-b√°sica",
    "href": "material/talleres/taller_1.html#calculadora-b√°sica",
    "title": "Matem√°ticas Divertidas con Python",
    "section": "üßÆ Calculadora B√°sica",
    "text": "üßÆ Calculadora B√°sica\nEn este ejercicio, vamos a crear una simple calculadora que puede realizar operaciones b√°sicas como suma, resta, multiplicaci√≥n y divisi√≥n. Esta actividad es ideal para que los principiantes practiquen el uso de funciones, operadores aritm√©ticos y estructuras condicionales en Python.\n\nContexto\nUna calculadora es una herramienta fundamental que permite realizar c√°lculos matem√°ticos b√°sicos y complejos. En este ejercicio, nos centraremos en construir una calculadora que pueda manejar cuatro operaciones b√°sicas: suma (+), resta (-), multiplicaci√≥n (*) y divisi√≥n (/). Adem√°s, nos aseguraremos de manejar casos especiales como la divisi√≥n por cero, que no es una operaci√≥n v√°lida en matem√°ticas y debe ser tratada con cuidado en nuestro c√≥digo.\n\n\nObjetivos del Ejercicio\n\n\n\n\n\n\nDesaf√≠o:\n\n\n\n\n\nEl objetivo de este ejercicio es escribir una funci√≥n en Python que pueda realizar las operaciones b√°sicas de una calculadora y manejar casos especiales como la divisi√≥n por cero.\n\n\n\n\nDefinir una funci√≥n: Crearemos una funci√≥n llamada calculadora que tome tres par√°metros: la operaci√≥n a realizar (operacion) y dos n√∫meros (num1 y num2).\nImplementar las operaciones: Usaremos estructuras condicionales (if, elif, else) para definir las operaciones aritm√©ticas b√°sicas.\nManejo de errores: Incluiremos una verificaci√≥n para la divisi√≥n por cero y devolveremos un mensaje de error apropiado.\nProbar la funci√≥n: Probaremos la funci√≥n con diferentes operaciones y valores para asegurarnos de que funcione correctamente.\n\n\n\nC√≥digo de la Calculadora\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nExplicaci√≥n del C√≥digo\nEste c√≥digo define una funci√≥n llamada calculadora que realiza lo siguiente:\n\nPar√°metros de Entrada:\n\noperacion: Un string que indica la operaci√≥n a realizar (+, -, *, /).\nnum1: El primer n√∫mero para la operaci√≥n.\nnum2: El segundo n√∫mero para la operaci√≥n.\n\nEstructura Condicional:\n\nUsa if, elif, y else para verificar qu√© operaci√≥n se debe realizar.\nRealiza la operaci√≥n correspondiente y devuelve el resultado en un formato de cadena que incluye el texto ‚ÄúResultado:‚Äù.\n\nManejo de Errores:\n\nPara la operaci√≥n de divisi√≥n (/), verifica si num2 es diferente de cero antes de realizar la divisi√≥n. Si num2 es cero, devuelve un mensaje de error ‚ÄúError: Divisi√≥n por cero‚Äù.\nSi se proporciona una operaci√≥n no v√°lida, devuelve ‚ÄúOperaci√≥n no v√°lida‚Äù.\n\n\n\n\nEjemplo de Uso\nEl c√≥digo de ejemplo muestra c√≥mo usar la funci√≥n calculadora con una operaci√≥n de suma (+), y los n√∫meros 10 y 5. Al ejecutar este ejemplo, se imprimir√° Para la operaci√≥n 10 + 5, el resultado es Resultado: 15.\n\n\nPrueba y Modificaci√≥n\nLos estudiantes pueden modificar los valores de operacion, num1, y num2 para probar diferentes c√°lculos y explorar c√≥mo funciona la funci√≥n. Por ejemplo:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nEstos ejemplos permiten a los estudiantes ver c√≥mo la funci√≥n realiza diferentes operaciones aritm√©ticas y maneja casos especiales como la divisi√≥n por cero, reforzando su comprensi√≥n del uso de funciones, operadores aritm√©ticos y estructuras condicionales en Python.",
    "crumbs": [
      "üöÄ Talleres",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Matem√°ticas Divertidas con Python</span>"
    ]
  },
  {
    "objectID": "material/talleres/taller_1.html#n√∫mero-primo",
    "href": "material/talleres/taller_1.html#n√∫mero-primo",
    "title": "Matem√°ticas Divertidas con Python",
    "section": "üî¢ N√∫mero Primo",
    "text": "üî¢ N√∫mero Primo\nUn programa para verificar si un n√∫mero es primo. Este ejercicio es √∫til para practicar el uso de bucles, estructuras condicionales y funciones en Python.\n\nContexto\nUn n√∫mero primo es un n√∫mero mayor que 1 que no tiene divisores positivos adem√°s de 1 y s√≠ mismo. Este ejercicio consiste en determinar si un n√∫mero dado es primo.\n\n\nObjetivos del Ejercicio\n\n\n\n\n\n\nDesaf√≠o:\n\n\n\n\n\nEl objetivo de este ejercicio es escribir una funci√≥n en Python que verifique si un n√∫mero es primo y pruebe la funci√≥n con un ejemplo.\n\n\n\n\nDefinir una funci√≥n: Crearemos una funci√≥n llamada es_primo que tome un par√°metro: el n√∫mero a verificar (n).\nImplementar la verificaci√≥n: Usaremos un bucle para comprobar si el n√∫mero tiene divisores distintos de 1 y s√≠ mismo.\nProbar la funci√≥n: Probaremos la funci√≥n con un valor de ejemplo y mostraremos el resultado.\n\n\n\nC√≥digo para Verificaci√≥n de N√∫mero Primo\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nExplicaci√≥n del C√≥digo\nEste c√≥digo define una funci√≥n llamada es_primo que realiza lo siguiente:\n\nPar√°metro de Entrada:\n\nn: Un entero que representa el n√∫mero a verificar.\n\nL√≥gica de Verificaci√≥n:\n\nSi n es menor o igual a 1, la funci√≥n devuelve False indicando que no es un n√∫mero primo.\nUsa un bucle for para iterar desde 2 hasta n-1. Si n es divisible por cualquier n√∫mero en este rango, la funci√≥n devuelve False indicando que no es un n√∫mero primo.\nSi el bucle termina sin encontrar divisores, la funci√≥n devuelve True indicando que el n√∫mero es primo.\n\n\n\n\nEjemplo de Uso\nEl c√≥digo de ejemplo muestra c√≥mo usar la funci√≥n es_primo con un valor de ejemplo (29). Al ejecutar este ejemplo, se imprimir√° 29 es un n√∫mero primo.\n\n\nPrueba y Modificaci√≥n\nLos estudiantes pueden modificar el valor de numero para probar diferentes n√∫meros y explorar c√≥mo funciona la funci√≥n. Por ejemplo:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nEstos ejemplos permiten a los estudiantes ver c√≥mo la funci√≥n verifica si diferentes n√∫meros son primos, reforzando su comprensi√≥n de los bucles, las estructuras condicionales y las funciones en Python. Este ejercicio proporciona una excelente oportunidad para practicar la implementaci√≥n de reglas matem√°ticas y condicionales en Python, y es una forma efectiva de entender c√≥mo aplicar algoritmos para resolver problemas del mundo real.",
    "crumbs": [
      "üöÄ Talleres",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Matem√°ticas Divertidas con Python</span>"
    ]
  },
  {
    "objectID": "material/talleres/taller_1.html#conjetura-de-collatz",
    "href": "material/talleres/taller_1.html#conjetura-de-collatz",
    "title": "Matem√°ticas Divertidas con Python",
    "section": "üìú Conjetura de Collatz",
    "text": "üìú Conjetura de Collatz\nEn este ejercicio, vamos a crear un programa que implemente la Conjetura de Collatz, tambi√©n conocida como la conjetura 3n + 1. Este ejercicio es excelente para practicar el uso de bucles, listas y estructuras condicionales en Python.\n\nContexto\nLa Conjetura de Collatz es un problema matem√°tico no resuelto que involucra una secuencia de n√∫meros. Comienza con cualquier n√∫mero positivo entero n y aplica las siguientes reglas repetidamente:\n\nSi n es par, se divide por 2.\nSi n es impar, se multiplica por 3 y se le suma 1.\n\nLa conjetura afirma que, no importa qu√© valor inicial se elija, la secuencia siempre llegar√° a 1.\n\n\nObjetivos del Ejercicio\n\n\n\n\n\n\nDesaf√≠o:\n\n\n\n\n\nEl objetivo de este ejercicio es escribir una funci√≥n en Python que implemente la Conjetura de Collatz y genere la secuencia de n√∫meros hasta llegar a 1.\n\n\n\n\nDefinir una funci√≥n: Crearemos una funci√≥n llamada conjetura_de_collatz que tome un par√°metro: el n√∫mero inicial (n).\nImplementar la l√≥gica: Usaremos un bucle while para generar la secuencia de n√∫meros aplicando las reglas de la conjetura.\nProbar la funci√≥n: Probaremos la funci√≥n con un n√∫mero inicial y mostraremos la secuencia generada.\n\n\n\nC√≥digo para la Conjetura de Collatz\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nExplicaci√≥n del C√≥digo\nEste c√≥digo define una funci√≥n llamada conjetura_de_collatz que realiza lo siguiente:\n\nPar√°metro de Entrada:\n\nn: Un entero positivo que representa el n√∫mero inicial de la secuencia.\n\nLista de Resultados:\n\nresultado: Una lista que almacenar√° la secuencia de n√∫meros generada por la conjetura.\n\nL√≥gica del Bucle:\n\nUsa un bucle while que contin√∫a hasta que n sea igual a 1.\nEn cada iteraci√≥n, a√±ade el valor actual de n a la lista resultado.\nSi n es par, lo divide por 2 usando n // 2.\nSi n es impar, lo multiplica por 3 y le suma 1 usando 3 * n + 1.\n\nA√±adir el Valor Final:\n\nDespu√©s de salir del bucle, a√±ade el valor final 1 a la lista resultado.\n\nDevolver la Secuencia:\n\nLa funci√≥n devuelve la lista resultado que contiene la secuencia completa de n√∫meros.\n\n\n\n\nEjemplo de Uso\nEl c√≥digo de ejemplo muestra c√≥mo usar la funci√≥n conjetura_de_collatz con un n√∫mero inicial de 6. Al ejecutar este ejemplo, se imprimir√° la secuencia generada, mostrando cada n√∫mero en la secuencia hasta llegar a 1.\n6 -&gt; 3 -&gt; 10 -&gt; 5 -&gt; 16 -&gt; 8 -&gt; 4 -&gt; 2 -&gt; 1\n\n\nPrueba y Modificaci√≥n\nLos estudiantes pueden modificar el valor de numero para probar diferentes n√∫meros iniciales y explorar c√≥mo funciona la secuencia de la Conjetura de Collatz. Por ejemplo:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nEstos ejemplos permiten a los estudiantes ver c√≥mo la funci√≥n genera diferentes secuencias seg√∫n el n√∫mero inicial, reforzando su comprensi√≥n del uso de bucles, listas y estructuras condicionales en Python. Este ejercicio no solo es una excelente pr√°ctica de programaci√≥n, sino que tambi√©n introduce a los estudiantes a un fascinante problema matem√°tico.",
    "crumbs": [
      "üöÄ Talleres",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Matem√°ticas Divertidas con Python</span>"
    ]
  },
  {
    "objectID": "material/talleres/taller_2.html",
    "href": "material/talleres/taller_2.html",
    "title": "Integraci√≥n de Python en la Ense√±anza de Matem√°ticas",
    "section": "",
    "text": "üéØ Objetivos del Taller",
    "crumbs": [
      "üöÄ Talleres",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Integraci√≥n de Python en la Ense√±anza de Matem√°ticas</span>"
    ]
  },
  {
    "objectID": "material/talleres/taller_2.html#objetivos-del-taller",
    "href": "material/talleres/taller_2.html#objetivos-del-taller",
    "title": "Integraci√≥n de Python en la Ense√±anza de Matem√°ticas",
    "section": "",
    "text": "Explorar c√≥mo Python puede mejorar la ense√±anza de las matem√°ticas.\nDesarrollar ejercicios de programaci√≥n que refuercen conceptos matem√°ticos.\nProveer herramientas para resolver problemas matem√°ticos con Python.",
    "crumbs": [
      "üöÄ Talleres",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Integraci√≥n de Python en la Ense√±anza de Matem√°ticas</span>"
    ]
  },
  {
    "objectID": "material/talleres/taller_2.html#contexto-y-justificaci√≥n",
    "href": "material/talleres/taller_2.html#contexto-y-justificaci√≥n",
    "title": "Integraci√≥n de Python en la Ense√±anza de Matem√°ticas",
    "section": "Contexto y Justificaci√≥n",
    "text": "Contexto y Justificaci√≥n\nIntegrar la programaci√≥n en Python en la ense√±anza de matem√°ticas ofrece una oportunidad √∫nica para explorar conceptos matem√°ticos de manera din√°mica. Python, con su sintaxis clara y su amplia gama de bibliotecas, es una herramienta excelente para demostrar temas que van desde la aritm√©tica b√°sica hasta conceptos m√°s avanzados como el c√°lculo y la estad√≠stica. La facilidad de Python para generar simulaciones, realizar c√°lculos simb√≥licos y construir visualizaciones lo convierte en una plataforma ideal para los educadores que buscan enriquecer la comprensi√≥n matem√°tica de los estudiantes.\n\nImportancia de Integrar Python en la Educaci√≥n Media\nLa inclusi√≥n de Python en el curr√≠culo de la ense√±anza media es crucial no solo para fomentar el inter√©s y la competencia en ciencias de la computaci√≥n, sino tambi√©n para integrar habilidades computacionales en el aprendizaje de las matem√°ticas. Esta integraci√≥n tiene varios beneficios clave:\n\nPreparaci√≥n para los desaf√≠os futuros: Los estudiantes desarrollan competencias pr√°cticas que les preparan para un mundo cada vez m√°s tecnol√≥gico y orientado a los datos.\nAplicaci√≥n de matem√°ticas en situaciones reales: Python permite que los estudiantes apliquen conceptos matem√°ticos abstractos en problemas del mundo real, haciendo que el aprendizaje sea m√°s tangible.\nDesarrollo del pensamiento cr√≠tico y la resoluci√≥n de problemas: Utilizar Python fomenta el desarrollo de habilidades de razonamiento l√≥gico, permitiendo a los estudiantes abordar problemas matem√°ticos desde diferentes perspectivas y encontrar soluciones m√°s eficientes.\n\n\n\n\n\n\nImpacto en la Educaci√≥n\nLa adopci√≥n de la programaci√≥n en la educaci√≥n ha mostrado un crecimiento constante en los √∫ltimos a√±os, reflejando su creciente relevancia en el aprendizaje moderno.\n\nAdopci√≥n de la Programaci√≥n en la Educaci√≥n: Se estima que m√°s del 40% de las escuelas en pa√≠ses desarrollados han incorporado alg√∫n tipo de ense√±anza de programaci√≥n en sus curr√≠culos, tanto en niveles primarios como secundarios. Este enfoque no solo prepara a los estudiantes para futuros desaf√≠os tecnol√≥gicos, sino que tambi√©n facilita el desarrollo de habilidades fundamentales como el pensamiento l√≥gico y la resoluci√≥n de problemas desde una edad temprana.\nMatem√°ticas en la Educaci√≥n STEM: Las matem√°ticas siguen siendo una piedra angular dentro de las disciplinas STEM (ciencia, tecnolog√≠a, ingenier√≠a y matem√°ticas). Seg√∫n un informe de la UNESCO, el 25% de las inscripciones universitarias a nivel global est√°n vinculadas a carreras relacionadas con STEM, lo que subraya la importancia de las matem√°ticas como base para el desarrollo de competencias en √°reas cient√≠ficas y tecnol√≥gicas. Esta intersecci√≥n entre matem√°ticas y programaci√≥n ofrece un enfoque integrado que maximiza el potencial de los estudiantes en ambos campos.\n\n\n\n\n\n\nDemanda en el Mercado Laboral\nLas habilidades en programaci√≥n y matem√°ticas son cruciales no solo en la educaci√≥n, sino tambi√©n en el mercado laboral. Existen varias tendencias importantes:\n\nCrecimiento en el desarrollo de software: El U.S. Bureau of Labor Statistics proyecta que la demanda de desarrolladores de software crecer√° un 22% entre 2020 y 2030, muy por encima del promedio de otras ocupaciones.\nDemanda de habilidades matem√°ticas: Un estudio de LinkedIn revela que las posiciones que requieren habilidades matem√°ticas, como ciencia de datos y an√°lisis financiero, est√°n creciendo a una tasa del 33% anual.\nSalarios competitivos: Los profesionales en estos campos tienden a tener salarios elevados. Los programadores ganan un salario promedio de $110,000 al a√±o en EE. UU., mientras que los matem√°ticos y analistas cuantitativos ganan en promedio $100,000.\n\n\n\n\n\n\nPerspectiva de G√©nero\nUno de los desaf√≠os m√°s persistentes en el √°mbito de la programaci√≥n y las matem√°ticas es la disparidad de g√©nero. Los datos actuales muestran lo siguiente:\n\nProgramaci√≥n: Solo el 21% de los puestos en inform√°tica y programaci√≥n son ocupados por mujeres. Sin embargo, las iniciativas para reducir esta brecha est√°n creciendo, con programas que promueven la inclusi√≥n de m√°s mujeres en ciencias de la computaci√≥n.\nMatem√°ticas: En ciencias matem√°ticas, aunque el 47% de los estudiantes de pregrado son mujeres, solo el 29% de los puestos acad√©micos permanentes son ocupados por ellas. Esto indica que a√∫n hay un largo camino por recorrer en cuanto a la equidad de g√©nero en estos campos.\n\n\n\n\n\n\nPython y las Matem√°ticas Aplicadas\nPython se ha posicionado como una herramienta esencial en las matem√°ticas aplicadas y la ciencia de datos. Existen varias razones para su popularidad:\n\nFlexibilidad y adaptabilidad: Con bibliotecas como NumPy, Pandas, Matplotlib y SymPy, Python permite realizar c√°lculos complejos y visualizaciones de manera eficiente.\nRelevancia en el machine learning: Seg√∫n un estudio de Kaggle, el 85% de los cient√≠ficos de datos considera que un fuerte entendimiento de matem√°ticas es esencial para desarrollar algoritmos de machine learning, y Python se ha convertido en el lenguaje preferido en este campo.\nVersatilidad en visualizaci√≥n de datos: Python permite a los estudiantes y profesionales gestionar grandes vol√∫menes de datos y crear visualizaciones interactivas que facilitan el an√°lisis y la toma de decisiones informadas.",
    "crumbs": [
      "üöÄ Talleres",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Integraci√≥n de Python en la Ense√±anza de Matem√°ticas</span>"
    ]
  },
  {
    "objectID": "material/talleres/taller_2.html#ejercicios-y-ejemplos-pr√°cticos",
    "href": "material/talleres/taller_2.html#ejercicios-y-ejemplos-pr√°cticos",
    "title": "Integraci√≥n de Python en la Ense√±anza de Matem√°ticas",
    "section": "Ejercicios y Ejemplos Pr√°cticos",
    "text": "Ejercicios y Ejemplos Pr√°cticos\n\nüî¢ Aritm√©tica y Python\nEstos ejercicios est√°n dise√±ados para ayudar a los estudiantes a practicar conceptos aritm√©ticos b√°sicos utilizando Python.\n\n1. Sumar y Restar Fracciones\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n2. Calcular el Promedio de una Lista de N√∫meros\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n3. M√≠nimo Com√∫n M√∫ltiplo (MCM)\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n4. Convertir de Decimal a Binario\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n5. Calcular el Factorial de un N√∫mero\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\nüìê Geometr√≠a y Python\nEstos ejercicios permiten a los estudiantes interactuar con conceptos geom√©tricos mediante Python.\n\n1. Calcular el √Årea y Per√≠metro de un Rect√°ngulo\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n2. Calcular el Volumen de un Cilindro\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n3. Calcular el √Årea de un Tri√°ngulo\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n4. Calcular la Distancia entre dos Puntos\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n5. Calcular el √Årea de un C√≠rculo\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "üöÄ Talleres",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Integraci√≥n de Python en la Ense√±anza de Matem√°ticas</span>"
    ]
  },
  {
    "objectID": "material/talleres/taller_2.html#implementaci√≥n-en-el-aula-con-inteligencia-artificial-y-chatgpt",
    "href": "material/talleres/taller_2.html#implementaci√≥n-en-el-aula-con-inteligencia-artificial-y-chatgpt",
    "title": "Integraci√≥n de Python en la Ense√±anza de Matem√°ticas",
    "section": "Implementaci√≥n en el Aula con Inteligencia Artificial y ChatGPT",
    "text": "Implementaci√≥n en el Aula con Inteligencia Artificial y ChatGPT\nLa inteligencia artificial, a trav√©s de herramientas como ChatGPT, puede transformar la manera en que los profesores ense√±an matem√°ticas y programaci√≥n. Utilizar ChatGPT en combinaci√≥n con plataformas interactivas como Jupyter Notebooks o Google Colab permite a los estudiantes acceder a explicaciones claras, ejemplos pr√°cticos y soluciones en tiempo real. Los estudiantes pueden hacer preguntas directamente a la IA para obtener ayuda adicional, reforzando su aprendizaje y mejorando su comprensi√≥n de conceptos matem√°ticos y de programaci√≥n.\n\n\n\n\n\n\nDesaf√≠o para Profesores:\n\n\n\n\n\nEl desaf√≠o para los profesores es seguir aprendiendo programaci√≥n en Python y explorar nuevas formas de integrar estas herramientas en la ense√±anza de matem√°ticas. A la vez, deben motivar a los estudiantes a profundizar en programaci√≥n, demostrando c√≥mo puede resolver problemas complejos de manera eficiente. ChatGPT facilita este proceso, proporcionando un recurso interactivo para resolver dudas y reforzar el aprendizaje.\nCrear ejercicios que combinen Python con matem√°ticas y animar a los estudiantes a interactuar con la IA impulsa una mayor participaci√≥n, adem√°s de introducirlos a tecnolog√≠as emergentes como la inteligencia artificial.",
    "crumbs": [
      "üöÄ Talleres",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Integraci√≥n de Python en la Ense√±anza de Matem√°ticas</span>"
    ]
  },
  {
    "objectID": "material/anexos/cierre_evento.html",
    "href": "material/anexos/cierre_evento.html",
    "title": "Cierre Evento",
    "section": "",
    "text": "üéØ Retroalimentaci√≥n\nNos encantar√≠a conocer tu opini√≥n sobre esta experiencia y saber en qu√© aspectos podemos mejorar. Te agradecer√≠amos mucho que tomaras unos minutos para completar la siguiente encuesta:\n\n \n\nhttps://forms.gle/MjQFihE1RiKzVgid9\n\n\n\n\n\nC√≥digo para sorteo\nPara sortear algunos premios utilizaremos, por supuesto, un c√≥digo de python. Usaremos la funci√≥n random.randint(a, b) que retorna un n√∫mero entero aleatorio \\(N\\) que cumpla la condici√≥n \\(a &lt;= N &lt;= b\\).\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "üìú Anexos",
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Cierre Evento</span>"
    ]
  },
  {
    "objectID": "material/anexos/aprendizaje.html",
    "href": "material/anexos/aprendizaje.html",
    "title": "Seguir Aprendiendo",
    "section": "",
    "text": "Recursos Recomendados",
    "crumbs": [
      "üìú Anexos",
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Seguir Aprendiendo</span>"
    ]
  },
  {
    "objectID": "material/anexos/aprendizaje.html#recursos-recomendados",
    "href": "material/anexos/aprendizaje.html#recursos-recomendados",
    "title": "Seguir Aprendiendo",
    "section": "",
    "text": "Cursos en L√≠nea\n\nCoursera: ‚ÄúPython for Everybody‚Äù de la Universidad de M√≠chigan.\nedX: ‚ÄúProgramming for Everybody‚Äù del MIT.\nUdemy: ‚ÄúComplete Python Bootcamp‚Äù y otros cursos desde nivel b√°sico a avanzado.\n\nPlataformas Interactivas\n\nCodecademy: Curso interactivo de Python.\nDataCamp: Cursos especializados en Python para ciencia de datos.\n\nDocumentaci√≥n y Recursos Comunitarios\n\nDocumentaci√≥n Oficial de Python: Gu√≠a completa para aprender Python, desde lo b√°sico hasta temas avanzados.\nPython.org Tutorial: Introducci√≥n para principiantes, cubriendo los fundamentos del lenguaje.\nStack Overflow: Comunidad para resolver dudas y aprender de problemas reales.\nGitHub: Explora proyectos de c√≥digo abierto en Python.\n\nLibros Recomendados\n\n‚ÄúAutomate the Boring Stuff with Python‚Äù de Al Sweigart.\n‚ÄúPython Crash Course‚Äù de Eric Matthes.\n‚ÄúFluent Python‚Äù de Luciano Ramalho.",
    "crumbs": [
      "üìú Anexos",
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Seguir Aprendiendo</span>"
    ]
  },
  {
    "objectID": "material/anexos/aprendizaje.html#consejos-para-aprender-python",
    "href": "material/anexos/aprendizaje.html#consejos-para-aprender-python",
    "title": "Seguir Aprendiendo",
    "section": "Consejos para Aprender Python",
    "text": "Consejos para Aprender Python\n\nPractica Regularmente: Escribe c√≥digo diariamente, aunque sea por poco tiempo.\nParticipa en Proyectos Reales: Contribuye a proyectos en GitHub o crea los tuyos.\nResuelve Ejercicios y Retos: Utiliza plataformas como LeetCode, HackerRank, y CodeWars.\n√önete a Comunidades: Participa en r/learnpython en Reddit y Python Discord.\nMantente Actualizado: Sigue blogs, webinars y conferencias para aprender sobre nuevas versiones y mejores pr√°cticas.\n\nCon estos recursos y consejos, estar√°s bien encaminado para dominar Python y aplicarlo con √©xito en tus proyectos y en tu carrera profesional.",
    "crumbs": [
      "üìú Anexos",
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Seguir Aprendiendo</span>"
    ]
  },
  {
    "objectID": "material/anexos/tecnologia.html",
    "href": "material/anexos/tecnologia.html",
    "title": "Sobre la p√°gina",
    "section": "",
    "text": "Esta p√°gina fue creada con quarto y la extensi√≥n quarto-pyodide\n\n\n\nFiltro quarto-pyodide en acci√≥n\n\n\nPuedes ver el ejemplo completo de la extensi√≥n en acci√≥n aqu√≠.",
    "crumbs": [
      "üìú Anexos",
      "<span class='chapter-number'>7</span>¬† <span class='chapter-title'>Sobre la p√°gina</span>"
    ]
  },
  {
    "objectID": "material/anexos/autoria.html",
    "href": "material/anexos/autoria.html",
    "title": "Autor√≠a",
    "section": "",
    "text": "Este material ha sido elaborado por Francisco Alfaro y Valeska Canales para apoyar las Olimpiadas de Matem√°tica del Departamento de Matem√°ticas de la UTFSM, Campus San Joaqu√≠n.\nSu prop√≥sito es motivar a los estudiantes a aprender Python y disfrutar las matem√°ticas a trav√©s de herramientas y recursos que faciliten la comprensi√≥n y el inter√©s en estos temas. Ofrecemos ejemplos pr√°cticos, problemas entretenidos y actividades interactivas para desarrollar habilidades en Python y profundizar en los conceptos matem√°ticos presentados en las olimpiadas.",
    "crumbs": [
      "üìú Anexos",
      "<span class='chapter-number'>8</span>¬† <span class='chapter-title'>Autor√≠a</span>"
    ]
  }
]